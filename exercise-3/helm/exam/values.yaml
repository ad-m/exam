# Default values for exam.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

connections:
  redis_database: '0'
  redis_host: '{{ template "exam.fullname" . }}-redis-master'
  redis_password: 'redis'
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

worker:
  image:
    repository: ghcr.io/ad-m/exam/exercise-3/worker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    messageQueueDepth: 80
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  replicaCount: 1
  podSecurityContext: {}
  securityContext: {}

flower:
  image:
    repository: ghcr.io/ad-m/exam/exercise-3/flower
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  replicaCount: 1
  podSecurityContext: {}
  securityContext: {}
  port: 5566
  metrics:
    enabled: true
  service:
    type: ClusterIP
    port: 80

producer:
  image:
    repository: ghcr.io/ad-m/exam/exercise-3/producer
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}
  task_duration:
    min: 1
    max: 40
    step: 5

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  password: 'redis'
  metrics:
    enabled: true

prometheus:
  enabled: true
  alertmanager: 
    enabled: false
  pushgateway: 
    enabled: false
  nodeExporter:
    enabled: true
    image:
      repository: quay.io/prometheus/node-exporter
      tag: v1.6.0
      pullPolicy: IfNotPresent

grafana:
  enabled: true
  admin-password: admin
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
          # <string, required> name of the datasource. Required
        - name: Prometheus
          # <string, required> datasource type. Required
          type: prometheus
          # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
          access: proxy
          orgId: 1
          # <string> url
          url: http://{{ .Release.Name }}-prometheus-server
          editable: true
          isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      flower-dashboard: 
        url: https://gist.githubusercontent.com/ad-m/b617c9f046248194d4cc2017cc583bb1/raw/327f73c7c8d01554d4b9a7ff0f4404ee8e5c0e71/flower.json
        datasource: Prometheus
      official-flower-dashboard:
        url: https://raw.githubusercontent.com/mher/flower/master/examples/celery-monitoring-grafana-dashboard.json
        datasource: Prometheus
      node-exporter:
        # Ref: https://grafana.com/grafana/dashboards/1860
        gnetId: 1860
        revision: 2
        datasource: Prometheus
      grafana: 
        gnetId: 3590
        revision: 3
        datasource: Prometheus
